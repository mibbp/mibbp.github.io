<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>KMP算法的理解分析及优化</title>
    <url>/2021/12/10/KMP%E7%AE%97%E6%B3%95%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%88%86%E6%9E%90%E5%8F%8A%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　kmp实际就是一种字符串查找算法，一般数据的时候我们可以直接暴力匹配但对于大数据是行不通的，接下来我以s为母串p为目标字符串。</p>
<p><img src="https://s2.loli.net/2021/12/10/CUawl31gIrvVbez.png" alt="图片.png"></p>
<p>　　如上图只有最后一位p[6]匹配失败按照传统暴力办法则要往后移动一位再继续匹配，就是这样</p>
<p><img src="https://s2.loli.net/2021/12/10/COzX82coZt9wr7G.png" alt="图片.png"></p>
<p>　　这样是十分浪费时间的因为在之前的匹配中我们已经知道s[5]=p[1]，而p[1]肯定不等于p[0]所以s[5]肯定不等于p[0]，而kmp就是利用之前已经</p>
<p>部分匹配这个有效信息，保持i 不回溯，通过修改j 的位置，让模式串尽量地移动到有效的位置。</p>
<p>　　KMP:</p>
<p>　　先说定义吧什么是KMP,</p>
<p>　　假设现在文本串S匹配到 i 位置，模式串P匹配到 j 位置</p>
<ul>
<li>如果j = -1，或者当前字符匹配成功（即S[i] == P[j]），都令i++，j++，继续匹配下一个字符；</li>
<li>如果j != -1，且当前字符匹配失败（即S[i] != P[j]），则令 i 不变，j = next[j]。此举意味着失配时，模式串P相对于文本串S向右移动了j - next [j] 位。</li>
<li>换言之，当匹配失败时，模式串向右移动的位数为：失配字符所在位置 - 失配字符对应的next 值，即**移动的实际位数为：j - next[j]**，且此值大于等于1。</li>
</ul>
<p>　　而next数组的含义就是比如next[j]表示的就是在长度为j-1的p目标字符串中最长的相同前缀和后缀长度。</p>
<p>　　也就是说在上图得情况中我们没必要这么一步一步往后推而是这样</p>
<p><img src="https://s2.loli.net/2021/12/10/5xpQYDPaC8MzXkS.png" alt="图片.png"></p>
<p>　　因为next数组的定义就是长度为j-1的目标字符串最大相同前缀后缀长度，所以往后移动j-next[j]就可以让其移动到一个效率跟高的位置，为什么呢，因为</p>
<p>在我们匹配的时候已经知道前j-1是已经匹配好的，那我们以前j-1字符串的前缀为基点移动到和他相同的最长后缀就可以了。</p>
<p>　　思路很好理解问题就是next数组该怎么求　</p>
<p>　　next数组：</p>
<p>　　next数组的定义就是next[j]表示的就是在长度为j-1的p目标字符串中最长的相同前缀和后缀长度，所以我们只需要找到每个位置最长前缀后缀，然后整体</p>
<p>右移一位赋初值为-1就可以了。这就是求next的思路，继续分析，假设我们已经知道了next[j]去求next[j+1]，假设next[j]就等于k，也就是在j-1的目标字符串中</p>
<p>前缀和后缀相同最长长度为k，那我们只需要去比较p[k]和p[j]就可以了，因为p0<del>pk-1是和pj-k</del>pj-1是相同的，如果pk==pj那么next[j+1]=next[j]+1=k+1,那假如不同呢？</p>
<p>　　不同的情况我们这样去理解：</p>
<p>　　先说结论就是去递归k=next[k]直到pk‘==pj然后next [j + 1] = k’ + 1 = next [k’ ] +  1，或者找不到就为0。那为什么是去递归k=next[k]呢，我们继续从next的定义出发，对于pj+1目标字符串来说他只是p[k]!=p[j]但是p0<del>pk-1是和pj-k</del>pj-1是相同的，从效率上讲我们只需要去找一个和p0<del>pk-1相同的前缀然后最后一位和pj相同就是我们要的值，而和p0</del>pk-1相同的前缀就是p0~p[next[k]]-1，不懂可以再看一下next数组的定义，所以我们只需要去比较p[next[k]]和p[j]是否相同就可以了相同就next [j + 1] = k’ + 1 = next [k’ ] + 1，不同就继续递归索引直到没有然后值就是0。</p>
<p><img src="https://s2.loli.net/2021/12/10/bQuvH3qDsrwdkOy.png" alt="图片.png"></p>
<p>代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000005</span>],b[<span class="number">1000005</span>];</span><br><span class="line"><span class="keyword">int</span> next[<span class="number">1000005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">(<span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> l1,<span class="keyword">int</span> l2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>,&amp;a,&amp;b))&#123;</span><br><span class="line">        sum=<span class="built_in">kmp</span>(<span class="built_in">strlen</span>(a),<span class="built_in">strlen</span>(b));</span><br><span class="line">        <span class="keyword">if</span>(sum&gt;=<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">-1</span>;</span><br><span class="line">    next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || b[i] == b[j])</span><br><span class="line">        &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">            next[i] = j;</span><br><span class="line">  </span><br><span class="line">        &#125;    </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            j=next[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> l1,<span class="keyword">int</span> l2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">getnext</span>(l2);</span><br><span class="line">    <span class="keyword">while</span>(i&lt;l1&amp;&amp;j&lt;l2)&#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span>||a[i]==b[j])&#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            j=next[j];    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j&gt;=l2)</span><br><span class="line">        <span class="keyword">return</span> i-l2;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>　但其实这个代码还有一点点小问题，就是这种情况</p>
<p><img src="https://s2.loli.net/2021/12/10/B8cpyvWMYtEXDHV.png" alt="图片.png"></p>
<p><img src="https://s2.loli.net/2021/12/10/Bvl564Z7PgmT9SX.png" alt="图片.png"></p>
<p>　　按照我们kmp的作用来说不应该出现这种失匹的情况，为什么会发生呢，问题出在不该出现p[j] = p[ next[j] ]。为什么呢？理由是：当p[j] != s[i] 时，下次匹配必然是p[ next [j]]  跟s[i]匹配，如果p[j] = p[ next[j]  ]，必然导致后一步匹配失败（因为p[j]已经跟s[i]失配，然后你还用跟p[j]等同的值p[next[j]]去跟s[i]匹配，很显然，必然失配），所以**不能允许p[j] = p[ next[j ]]**。如果出现了p[j] = p[ next[j] ]咋办呢？如果出现了，则需要再次递归，即令next[j] = next[ next[j] ]。</p>
<p>　　所以优化一下的代码就是：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000005</span>],b[<span class="number">1000005</span>];</span><br><span class="line"><span class="keyword">int</span> next[<span class="number">1000005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">(<span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> l1,<span class="keyword">int</span> l2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>,&amp;a,&amp;b))&#123;</span><br><span class="line">        sum=<span class="built_in">kmp</span>(<span class="built_in">strlen</span>(a),<span class="built_in">strlen</span>(b));</span><br><span class="line">        <span class="keyword">if</span>(sum&gt;=<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">-1</span>;</span><br><span class="line">    next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span> || b[i] == b[j])</span><br><span class="line">        &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">            <span class="keyword">if</span>(b[i]!=b[j])</span><br><span class="line">                next[i] = j;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                next[i]=next[j];    </span><br><span class="line">        &#125;    </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            j=next[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> l1,<span class="keyword">int</span> l2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">getnext</span>(l2);</span><br><span class="line">    <span class="keyword">while</span>(i&lt;l1&amp;&amp;j&lt;l2)&#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span>||a[i]==b[j])&#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            j=next[j];    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j&gt;=l2)</span><br><span class="line">        <span class="keyword">return</span> i-l2;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/12/09/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>《男人八题》之—多重背包的单调队列优化与二进制优化</title>
    <url>/2021/12/10/%E3%80%8A%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E3%80%8B%E4%B9%8B%E2%80%94%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%E7%9A%84%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96%E4%B8%8E%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　多重背包就是背包问题加了个次数每个物品可以选s次，很容易想到的代码就是在状态转换中再加一个循环从0到s，但这样大数据会超时，所以有了很多</p>
<p>优化方案。</p>
<p>　　二进制优化：</p>
<p>　　每个物品可以选的次数都是不同的，有一种想法是把这可以选s次的物品拆成s个物品，这样就只涉及选与不选，就简化成了01背包问题但还是会超时，因</p>
<p>为拆成了s个但其实没必要我们只需要拆成log2(n)个就可以了，转换成二进制，举个例子，比如说7，7的二进制是111，111以内的数都可以用100,10,1来表示，也就是十进制的1，2，4，但7是特殊情况或者比如说10，同样拆成1、2、4。1、2、4，可以表示7以内的数而我想表示10以内的书就只需要再加个3就可以了，dddd。</p>
<p>　　然后这样代码复杂度就不是O(n<em>v</em>s)而是O(n<em>v</em>log2(s))。</p>
<p>　　代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2010</span>;</span><br><span class="line"><span class="keyword">int</span> f[N],n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">good</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> w,v;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    vector&lt;good&gt; Good;</span><br><span class="line">    good tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v,w,s;</span><br><span class="line">        cin&gt;&gt;v&gt;&gt;w&gt;&gt;s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span> ; k &lt;= s ; k*=<span class="number">2</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            s-=k;</span><br><span class="line">            Good.<span class="built_in">push_back</span>(&#123;k*w,k*v&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;<span class="number">0</span>) Good.<span class="built_in">push_back</span>(&#123;s*w,s*v&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> t : Good)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = m ; j &gt;= t.v ; j--)</span><br><span class="line">            f[j] = <span class="built_in">max</span>(f[j] , f[j-t.v]+t.w );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;f[m]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>　　单调队列优化：</p>
<p>　　这个巨难我看大佬解析看懂的，原解析在这</p>
<p>　　作者：lys<br>　　链接：<a href="https://www.acwing.com/solution/content/6500/">https://www.acwing.com/solution/content/6500/</a><br>　　来源：AcWing</p>
<p>　　首先先从完全背包的思路出发dp[i][j] 表示将前 i 种物品放入容量为 j 的背包中所得到的最大价值dp[i][j] = max(不放入物品 i，放入1个物品 i，放入2个物品 i, … , 放入k个物品  i)，这里 k 要满足：k &lt;= s, j - k<em>v &gt;= 0，不放物品 i = dp[i-1][j]，放k个物品 i =  dp[i-1][j - k</em>v] + k<em>w，dp[i][j] = max(dp[i-1][j], dp[i-1][j-v] + w,  dp[i-1][j-2</em>v] + 2<em>w,…, dp[i-1][j-k</em>v] + k*w)。</p>
<p>　　然后我们优化成了一维，适当的调整循环条件，我们可以重复利用dp数组来保存上一轮的信息，我们令 dp[j] 表示容量为j的情况下，获得的最大价值，那么，针对每一类物品 i ，我们都更新一下 dp[m] –&gt; dp[0] 的值，最后 dp[m] 就是一个答案。<br>　　dp[m] = max(dp[m], dp[m-v] + w, dp[m-2<em>v] + 2</em>w, dp[m-3<em>v] + 3</em>w, …)<br>　　接下来，我们把 dp[0] –&gt; dp[m] 写成下面这种形式<br>　　dp[0], dp[v],  dp[2<em>v],  dp[3</em>v],  … , dp[k<em>v]<br>　　dp[1], dp[v+1], dp[2</em>v+1], dp[3<em>v+1], … , dp[k</em>v+1]<br>　　dp[2], dp[v+2], dp[2<em>v+2], dp[3</em>v+2], … , dp[k<em>v+2]<br>　　…<br>　　dp[j], dp[v+j], dp[2</em>v+j], dp[3<em>v+j], … , dp[k</em>v+j]</p>
<p>　　因为k<em>v+j一定可以等于m，所以很容易想到可以把这些分为j个类，每一类中的值，都是在同类之间转换得到的，也就是说，dp[k</em>v+j] 只依赖于 { dp[j], dp[v+j], dp[2<em>v+j], dp[3</em>v+j], … , dp[k<em>v+j]  }，因为我们需要的是{ dp[j], dp[v+j], dp[2</em>v+j], dp[3<em>v+j], … , dp[k</em>v+j] }  中的最大值，可以通过维护一个单调队列来得到结果。这样的话，问题就变成了 j 个单调队列的问题。所以，我们可以得到：<br>　　dp[j]  =   dp[j]<br>　　dp[j+v] = max(dp[j] + w, dp[j+v])<br>　　dp[j+2v] = max(dp[j] + 2w, dp[j+v] + w, dp[j+2v])<br>　　dp[j+3v] = max(dp[j] + 3w, dp[j+v] + 2w, dp[j+2v] + w, dp[j+3v])<br>　　…<br>　　但是，这个队列中前面的数，每次都会增加一个 w ，所以我们需要做一些转换<br>　　dp[j]  =   dp[j]<br>　　dp[j+v] = max(dp[j], dp[j+v] - w) + w<br>　　dp[j+2v] = max(dp[j], dp[j+v] - w, dp[j+2v] - 2w) + 2w<br>　　dp[j+3v] = max(dp[j], dp[j+v] - w, dp[j+2v] - 2w, dp[j+3v] - 3w) + 3w<br>　　…<br>　　这样，每次入队的值是 dp[j+k<em>v] - k</em>w</p>
<p>　　key:</p>
<p>　　维护队列元素的个数，如果不能继续入队，弹出队头元素<br>　　维护队列的单调性，即：尾值 &gt;= dp[j + k<em>v] - k</em>w</p>
<p>　　代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">20010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N], pre[N], q[N];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(pre, dp, <span class="built_in"><span class="keyword">sizeof</span></span>(dp));</span><br><span class="line">        <span class="keyword">int</span> v, w, s;</span><br><span class="line">        cin &gt;&gt; v &gt;&gt; w &gt;&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; v; ++j) &#123;</span><br><span class="line">            <span class="keyword">int</span> head = <span class="number">0</span>, tail = <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = j; k &lt;= m; k += v) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (head &lt;= tail &amp;&amp; k - s*v &gt; q[head])</span><br><span class="line">                    ++head;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> (head &lt;= tail &amp;&amp; pre[q[tail]] - (q[tail] - j)/v * w &lt;= pre[k] - (k - j)/v * w)</span><br><span class="line">                    --tail;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (head &lt;= tail)</span><br><span class="line">                    dp[k] = <span class="built_in">max</span>(dp[k], pre[q[head]] + (k - q[head])/v * w);</span><br><span class="line"></span><br><span class="line">                q[++tail] = k;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[m] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>背包问题的理解与优化</title>
    <url>/2021/12/10/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　今天学习了简单的几个背包问题，分别是01背包、完全背包、多重背包，在此总结一下我对背包问题的理解和优化的思路。</p>
<p>　　01背包：</p>
<p>　　01背包思路很简单一开始我写的是二维，很好理解，01背包问题的关键就是什么时候选时候不选，f[i][j]就是在前i个物品，j个大小内最大能装的数量，假设f[i-1][j]也就是对于容量位j的情况下前i-1个物品的最优解已经确立，对于f[i][j]的最优解只需要看第i个物品选还是不选就行了。</p>
<p>不选就是f[i-1][j]选就是f[i-1][j-v[i]]+m[i]，选择两者中最大的就行，不过进行比较前的先让f[i][j]=f[i-1][j]然后进行判断j&gt;=v[i],dddd，f[0][0]的情况是确立的为0，然后递推就可以了，最后从f[n][0~v]取最大值就是答案。</p>
<p>　　代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span>#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> N,V;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">1010</span>],m[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;N,&amp;V);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;v[i],&amp;m[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=V;j++)&#123;</span><br><span class="line">            f[i][j]=f[i<span class="number">-1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(j&gt;=v[i])</span><br><span class="line">                f[i][j]=<span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j-v[i]]+m[i]);</span><br><span class="line">            </span><br><span class="line">                    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=V;i++) ans=<span class="built_in">max</span>(ans,f[N][i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>优化：</p>
<p>　　二维很好理解但是开的数组很大，所以把它优化为一维，一般优化的时候我们做等价变化，把一维全部一去然后会发现核心判断变成了这样</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=V;j++)&#123;</span><br><span class="line">        f[j]=<span class="built_in">max</span>(f[j],f[j-v[i]]+m[i]);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但其实很容易就发现问题，因为我们一开始写的是f[i][j]和f[i-1][j-v[i]]，但到这里就会发现其实不是i-1]而是i,为了解决这个问题只需要从大到小去推就行了，</p>
<p>其实很好理解，外部循环我们是从小到大的，内部从大到小，j-v[i]一定小于j所以在内部的循环一定是先进行j在进行j-v[i]，所以现在的j-v[i]是没有更新过的，</p>
<p>也就是f[i-1]的情况。最后只需要输出f[V]就可以了因为一开始都初始化为0,f[V]的意思就是容量为v的最优解，即使最优解实际容量不是v，可能是k，也可以</p>
<p>从f[k]的情况转移到f[v]。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,x,y;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=x;j--)&#123;</span><br><span class="line">            f[j]=<span class="built_in">max</span>(f[j-x]+y,f[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;f[m];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>　　完全背包：</p>
<p>　　完全背包和01背包看似只有内部循环的顺序不同但其实对于这个的理解还是要很深的，先上代码。</p>
<p>　　代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> N,V;</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">1010</span>],w[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;N,&amp;V);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;v[i],&amp;w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=v[i];j&lt;=V;j++)&#123;</span><br><span class="line">            f[j]=<span class="built_in">max</span>(f[j],f[j-v[i]]+w[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,f[V]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">首先先分析，完全背包和<span class="number">01</span>背包的区别就是可以选多次，所以对于f[i][j]就不再是选与不选两种情况而是选k种与不选的多种情况，对于不选还是f[i<span class="number">-1</span>][j]，</span><br><span class="line"></span><br><span class="line">选一种就是f[i<span class="number">-1</span>][j-v[i]]+w[i]，两种就是f[<span class="number">-1</span>][j<span class="number">-2</span>v[i]]+<span class="number">2</span>w[i]...f[i<span class="number">-1</span>][j-kv[i]]+kw[i]，也就是容量上限的时候，其实对于这种很容易就可以想到再加一个循环枚举<span class="number">0</span></span><br><span class="line"></span><br><span class="line">到k的情况然后取最大值就可以，但是也很容易就想到这样会超时，而之所以代码只进行了一次比较是有很大原因的。</span><br><span class="line"></span><br><span class="line">　　继续分析，对于f[i][j-w[i]]来说，就相当于是</span><br><span class="line">    						f[i<span class="number">-1</span>][j-v[i]]　　      f[i<span class="number">-1</span>][j<span class="number">-2</span>v[i]]+w[i]　　   ...　　f[i<span class="number">-1</span>][j-k+<span class="number">1</span>v[i]]+kw[i]　　<span class="comment">//他有的下面都有就是少个w[i]所以下面要考虑的他已经考虑过了</span></span><br><span class="line">而f[i][j]则是f[i<span class="number">-1</span>][j]　　　  f[i<span class="number">-1</span>][j-v[i]]+w[i]　  f[<span class="number">-1</span>][j<span class="number">-2</span>v[i]]+<span class="number">2</span>w[i]　　  ...　　f[i<span class="number">-1</span>][j-kv[i]]+kw[i]　</span><br><span class="line"></span><br><span class="line">很容易就看出f[i][j]其实就是f[i][j-v[i]]加上w[i]与f[i<span class="number">-1</span>][j]的最大值。然后我们是从小到大去递，所以一开始的f[j]是没有更新的f[j]也就是f[i<span class="number">-1</span>][j]，而j-v[i]比j小所以</span><br><span class="line"></span><br><span class="line">f[j-v]是已经更新过的也就是f[i][j-v],最后输出f[v]。</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>java习题</title>
    <url>/2021/12/09/java%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="7-12-图形继承-20-分"><a href="#7-12-图形继承-20-分" class="headerlink" title="7-12 图形继承 (20 分)"></a>7-12 图形继承 (20 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span> //定义一个无自身属性，有一个返回值为0.0的求面积方法</span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Shape</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Constructing Shape&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	   <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">extends</span> <span class="title">Shape</span>//继承自<span class="title">Shape</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Constructing Circle&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">double</span> radius;<span class="comment">//新定义一个半径</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRadius</span><span class="params">(<span class="keyword">double</span> radius)</span> </span>&#123;<span class="comment">// 设置半径</span></span><br><span class="line">		<span class="keyword">this</span>.radius = radius;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getRadius</span><span class="params">()</span> </span>&#123;<span class="comment">// 获取半径</span></span><br><span class="line">		<span class="keyword">return</span> radius;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> Math.PI*radius*radius;<span class="comment">//重写父类的方法</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">extends</span> <span class="title">Shape</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Constructing Rectangle&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">double</span> width;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">double</span> length;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getWidth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> width;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWidth</span><span class="params">(<span class="keyword">double</span> width)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.width = width;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> length;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLength</span><span class="params">(<span class="keyword">double</span> length)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.length = length;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> width*length;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ball</span> <span class="keyword">extends</span> <span class="title">Circle</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Ball</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Constructing Ball&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">4.0</span>*<span class="keyword">super</span>.getArea();<span class="comment">//方法的重载，super关键字</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getVolume</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">double</span> r2=getRadius();</span><br><span class="line">		<span class="keyword">return</span> <span class="number">4.0</span>/<span class="number">3.0</span>*r2*r2*r2*Math.PI;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span> <span class="keyword">extends</span> <span class="title">Rectangle</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Box</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Constructing Box&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">double</span> height;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> height;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(<span class="keyword">double</span> height)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.height = height;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getVolume</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> height*<span class="keyword">super</span>.getArea();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">double</span> w2=getWidth();</span><br><span class="line">		<span class="keyword">double</span> l2=getLength();</span><br><span class="line">		<span class="keyword">return</span> <span class="number">2</span>*(w2*l2+w2*height+l2*height);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> inType;</span><br><span class="line">		Scanner scanner=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		inType=scanner.nextInt();</span><br><span class="line">		<span class="keyword">switch</span>(inType)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			<span class="keyword">double</span> r=scanner.nextDouble();</span><br><span class="line">			<span class="keyword">if</span>(r&lt;<span class="number">0.0</span>) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;Wrong Format&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				Circle circle=<span class="keyword">new</span> Circle();</span><br><span class="line">				circle.setRadius(r);</span><br><span class="line">				System.out.println(String.format(<span class="string">&quot;Circle&#x27;s area:%.2f&quot;</span>,circle.getArea()));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">			<span class="keyword">double</span> width=scanner.nextDouble();</span><br><span class="line">			<span class="keyword">double</span> length=scanner.nextDouble();</span><br><span class="line">			<span class="keyword">if</span>(width&lt;<span class="number">0.0</span>||length&lt;<span class="number">0.0</span>) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;Wrong Format&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				Rectangle rectangle=<span class="keyword">new</span> Rectangle();</span><br><span class="line">				rectangle.setLength(length);</span><br><span class="line">				rectangle.setWidth(width);</span><br><span class="line">				System.out.println(String.format(<span class="string">&quot;Rectangle&#x27;s area:%.2f&quot;</span>,rectangle.getArea()));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">			<span class="keyword">double</span> r2=scanner.nextDouble();</span><br><span class="line">			<span class="keyword">if</span>(r2&lt;<span class="number">0.0</span>) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;Wrong Format&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				Ball ball=<span class="keyword">new</span> Ball();</span><br><span class="line">				ball.setRadius(r2);</span><br><span class="line">				System.out.println(String.format(<span class="string">&quot;Ball&#x27;s surface area:%.2f&quot;</span>,ball.getArea()));</span><br><span class="line">				System.out.println(String.format(<span class="string">&quot;Ball&#x27;s volume:%.2f&quot;</span>,ball.getVolume()));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">			<span class="keyword">double</span> width2=scanner.nextDouble();</span><br><span class="line">			<span class="keyword">double</span> length2=scanner.nextDouble();</span><br><span class="line">			<span class="keyword">double</span> height=scanner.nextDouble();</span><br><span class="line">			<span class="keyword">if</span>(width2&lt;<span class="number">0.0</span>||length2&lt;<span class="number">0.0</span>||height&lt;<span class="number">0.0</span>) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;Wrong Format&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				Box box=<span class="keyword">new</span> Box();</span><br><span class="line">				box.setHeight(height);</span><br><span class="line">				box.setWidth(width2);</span><br><span class="line">				box.setLength(length2);</span><br><span class="line">				System.out.println(String.format(<span class="string">&quot;Box&#x27;s surface area:%.2f&quot;</span>,box.getArea()));</span><br><span class="line">				System.out.println(String.format(<span class="string">&quot;Box&#x27;s volume:%.2f&quot;</span>,box.getVolume()));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			System.out.println(<span class="string">&quot;Wrong Format&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-13-jmu-Java-03面向对象基础-04-形状-继承-15-分"><a href="#7-13-jmu-Java-03面向对象基础-04-形状-继承-15-分" class="headerlink" title="7-13 jmu-Java-03面向对象基础-04-形状-继承 (15 分)"></a>7-13 jmu-Java-03面向对象基础-04-形状-继承 (15 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">	<span class="keyword">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line"> </span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">getPerimeter</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">extends</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> wide, len;</span><br><span class="line"> </span><br><span class="line">	Rectangle(<span class="keyword">int</span> a, <span class="keyword">int</span> b) &#123;</span><br><span class="line">		wide = a;</span><br><span class="line">		len = b;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getPerimeter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">2</span> * (wide + len);</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> wide * len;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;[width=&quot;</span> + wide + <span class="string">&quot;, length=&quot;</span> + len + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">extends</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> radius;</span><br><span class="line"> </span><br><span class="line">	Circle(<span class="keyword">int</span> _radius) &#123;</span><br><span class="line">		radius = _radius;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getPerimeter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> radius * <span class="number">2</span> * PI;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> radius * radius * PI;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;[radius=&quot;</span> + radius + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">		in.nextLine();</span><br><span class="line">		Shape A[] = <span class="keyword">new</span> Shape[n];</span><br><span class="line">		<span class="keyword">int</span> k = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">double</span> sumAllArea = <span class="number">0</span>, sumAllPerimeter = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">			String S = in.next();</span><br><span class="line">			<span class="keyword">if</span> (S.equals(<span class="string">&quot;rect&quot;</span>)) &#123;</span><br><span class="line">				<span class="keyword">int</span> wide = in.nextInt(), len = in.nextInt();</span><br><span class="line">				in.nextLine();</span><br><span class="line">				A[i] = <span class="keyword">new</span> Rectangle(wide, len);</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (S.equals(<span class="string">&quot;cir&quot;</span>)) &#123;</span><br><span class="line">				<span class="keyword">int</span> radius = in.nextInt();</span><br><span class="line">				in.nextLine();</span><br><span class="line">				A[i] = <span class="keyword">new</span> Circle(radius);</span><br><span class="line">			&#125;</span><br><span class="line">			sumAllArea += A[i].getArea();</span><br><span class="line">			sumAllPerimeter += A[i].getPerimeter();</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		System.out.println(sumAllPerimeter);</span><br><span class="line">		System.out.println(sumAllArea);</span><br><span class="line">		System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(i != <span class="number">0</span>)</span><br><span class="line">				System.out.print(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">			<span class="keyword">if</span> (A[i] <span class="keyword">instanceof</span> Rectangle) &#123;</span><br><span class="line">					System.out.print(<span class="string">&quot;Rectangle &quot;</span>);</span><br><span class="line">				System.out.print(A[i].toString());</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">					System.out.print(<span class="string">&quot;Circle &quot;</span>);</span><br><span class="line">				System.out.print(A[i].toString());	</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line"> </span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(A[i] <span class="keyword">instanceof</span> Rectangle) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;class Rectangle,class Shape&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;class Circle,class Shape&quot;</span>);</span><br><span class="line"> </span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		in.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="7-15-集体评分2-10-分"><a href="#7-15-集体评分2-10-分" class="headerlink" title="7-15 集体评分2 (10 分)"></a>7-15 集体评分2 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">                Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                <span class="keyword">int</span>[] grade = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;grade.length; i++)&#123;</span><br><span class="line">                      grade[i] = in.nextInt();</span><br><span class="line">                 &#125;</span><br><span class="line"></span><br><span class="line">                RR rr = <span class="keyword">new</span> RT(grade);</span><br><span class="line">                <span class="keyword">double</span> dd = rr.mark();</span><br><span class="line">                System.out.printf(<span class="string">&quot;%.2f&quot;</span>,dd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">RR</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">double</span> <span class="title">mark</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RT</span> <span class="keyword">implements</span> <span class="title">RR</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>[] grade;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">mark</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	   <span class="keyword">double</span> max=<span class="number">0</span>;</span><br><span class="line">	   <span class="keyword">double</span> min=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">	   <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line">	   <span class="keyword">for</span>(<span class="keyword">int</span> i: grade) &#123;</span><br><span class="line">		   sum+=i;</span><br><span class="line">		   <span class="keyword">if</span>(i&gt;max)max=i;</span><br><span class="line">		   <span class="keyword">if</span>(i&lt;min)min=i;</span><br><span class="line">	   &#125;</span><br><span class="line">	   sum-=(max+min);</span><br><span class="line">	   sum/=(<span class="keyword">double</span>)(grade.length-<span class="number">2</span>);</span><br><span class="line">	   <span class="keyword">return</span> sum;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">RT</span><span class="params">(<span class="keyword">int</span>[] grade)</span></span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.grade = grade;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="7-16-程序改错题2-5-分"><a href="#7-16-程序改错题2-5-分" class="headerlink" title="7-16 程序改错题2 (5 分)"></a>7-16 程序改错题2 (5 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Dog animal = <span class="keyword">new</span> Dog();</span><br><span class="line">        animal.shout();</span><br><span class="line">        animal.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;animal shout！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.shout();</span><br><span class="line">        System.out.println(<span class="string">&quot;wangwang……&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Dog is running&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="7-17-程序填空题3-5-分"><a href="#7-17-程序填空题3-5-分" class="headerlink" title="7-17 程序填空题3 (5 分)"></a>7-17 程序填空题3 (5 分)</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Son son = new Son();</span><br><span class="line">        son.method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Parent &#123;</span><br><span class="line">    Parent() &#123;</span><br><span class="line">        System.out.println(&quot;Parent&#x27;s Constructor without parameter&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Parent(boolean b) &#123;</span><br><span class="line">        System.out.println(&quot;Parent&#x27;s Constructor with a boolean parameter&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void method() &#123;</span><br><span class="line">        System.out.println(&quot;Parent&#x27;s method()&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Son extends Parent &#123;</span><br><span class="line">    //补全本类定义</span><br><span class="line">	Son()&#123;</span><br><span class="line">		super(true);</span><br><span class="line">		System.out.println(&quot;Son&#x27;s Constructor without parameter&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	public void method() &#123;</span><br><span class="line">//		super.method();</span><br><span class="line">		System.out.println(&quot;Son&#x27;s method()&quot;);</span><br><span class="line">		super.method();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="7-18-接口–四则计算器-10-分"><a href="#7-18-接口–四则计算器-10-分" class="headerlink" title="7-18 接口–四则计算器 (10 分)"></a>7-18 接口–四则计算器 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ICompute</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">compute</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Add</span> <span class="keyword">implements</span> <span class="title">ICompute</span></span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compute</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> x+y;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sub</span> <span class="keyword">implements</span> <span class="title">ICompute</span></span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compute</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">return</span> x-y;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">       <span class="keyword">int</span> a=in.nextInt(),b=in.nextInt();</span><br><span class="line">       Add x=<span class="keyword">new</span> Add();</span><br><span class="line">       Sub y=<span class="keyword">new</span> Sub();</span><br><span class="line">       System.out.println(x.compute(a,b));</span><br><span class="line">       System.out.println(y.compute(a, b));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-19-成绩录入时的及格与不及格人数统计-10-分"><a href="#7-19-成绩录入时的及格与不及格人数统计-10-分" class="headerlink" title="7-19 成绩录入时的及格与不及格人数统计 (10 分)"></a>7-19 成绩录入时的及格与不及格人数统计 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="keyword">int</span> n=in.nextInt();</span><br><span class="line">		<span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">			<span class="keyword">int</span> x=in.nextInt();</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="keyword">if</span>(x&gt;<span class="number">100</span>||x&lt;<span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(x+<span class="string">&quot;invalid!&quot;</span>);</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(x&gt;=<span class="number">60</span>)a++;</span><br><span class="line">				<span class="keyword">else</span> b++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				i--;</span><br><span class="line">				System.out.println(e.getMessage());</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(a);</span><br><span class="line">		System.out.println(b);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-20-jmu-Java-02基本语法-02-StringBuilder-10-分"><a href="#7-20-jmu-Java-02基本语法-02-StringBuilder-10-分" class="headerlink" title="7-20 jmu-Java-02基本语法-02-StringBuilder (10 分)"></a>7-20 jmu-Java-02基本语法-02-StringBuilder (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    	Scanner in =<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    	</span><br><span class="line">    	<span class="keyword">while</span>(in.hasNextInt()) &#123;</span><br><span class="line">    		<span class="keyword">int</span> n,begin,end;</span><br><span class="line">    		n=in.nextInt();</span><br><span class="line">    		begin=in.nextInt();</span><br><span class="line">    		end=in.nextInt();</span><br><span class="line">    		StringBuilder s =<span class="keyword">new</span> StringBuilder();</span><br><span class="line">    		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">    			s.append(i);</span><br><span class="line">    		&#125;</span><br><span class="line">    		System.out.println(s.substring(begin, end));</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-21-单词替换-20-分"><a href="#7-21-单词替换-20-分" class="headerlink" title="7-21 单词替换 (20 分)"></a>7-21 单词替换 (20 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       Scanner cin = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">       String str_book = cin.nextLine();</span><br><span class="line">       String str_old = cin.next();</span><br><span class="line">       String str_new = cin.next();</span><br><span class="line"></span><br><span class="line">       String []book_str = str_book.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; book_str.length; i ++ )&#123;</span><br><span class="line">           String str = book_str[i];</span><br><span class="line">           <span class="keyword">if</span>( str.equals(str_old) || str.equals(str_old + <span class="string">&quot;,&quot;</span>) || str.equals(str_old + <span class="string">&quot;.&quot;</span>) || str.equals(str_old + <span class="string">&quot;&#x27;&quot;</span>))&#123;</span><br><span class="line">               <span class="keyword">if</span>(! (str.charAt(str.length() - <span class="number">1</span>) &gt;= <span class="number">65</span> &amp;&amp; str.charAt(str.length() - <span class="number">1</span>) &lt;= <span class="number">122</span>) )&#123;</span><br><span class="line">                   str = str_new + str.charAt(str.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span>&#123;</span><br><span class="line">                   str = str_new ;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>( i != book_str.length - <span class="number">1</span>)&#123;</span><br><span class="line">               System.out.print(str + <span class="string">&quot; &quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               System.out.println(str);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">        cin.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-22-jmu-java-随机数-使用蒙特卡罗法计算圆周率的值-10-分"><a href="#7-22-jmu-java-随机数-使用蒙特卡罗法计算圆周率的值-10-分" class="headerlink" title="7-22 jmu-java-随机数-使用蒙特卡罗法计算圆周率的值 (10 分)"></a>7-22 jmu-java-随机数-使用蒙特卡罗法计算圆周率的值 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="keyword">long</span> seed = in.nextLong();</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">		Random r = <span class="keyword">new</span> Random(seed);</span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">			<span class="keyword">double</span> x = r.nextDouble()*<span class="number">2</span>-<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">double</span> y = r.nextDouble()*<span class="number">2</span>-<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span> ( x*x + y*y &lt;=<span class="number">1</span>) count++;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="number">4</span>*(<span class="keyword">double</span>)count/n);	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-23-通过键盘输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。-10-分"><a href="#7-23-通过键盘输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。-10-分" class="headerlink" title="7-23 通过键盘输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。 (10 分)"></a>7-23 通过键盘输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		String str = sc.nextLine();</span><br><span class="line">		sc.close();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">char</span>[] chars = str.toCharArray();</span><br><span class="line">		<span class="keyword">int</span> letter=<span class="number">0</span>,num=<span class="number">0</span>,blank=<span class="number">0</span>,other=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;chars.length;i++) &#123;</span><br><span class="line">			<span class="keyword">if</span>((chars[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; chars[i]&lt;=<span class="string">&#x27;Z&#x27;</span>) || (chars[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; chars[i]&lt;=<span class="string">&#x27;z&#x27;</span>))&#123;</span><br><span class="line">				letter++;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(chars[i]&gt;=<span class="number">47</span> &amp;&amp; chars[i]&lt;=<span class="number">57</span>) &#123;</span><br><span class="line">				num++;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(chars[i]==<span class="number">32</span>) &#123;</span><br><span class="line">				blank++;</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				other++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		System.out.println(<span class="string">&quot;字母个数：&quot;</span>+letter);</span><br><span class="line">		System.out.println(<span class="string">&quot;数字个数：&quot;</span>+num);</span><br><span class="line">		System.out.println(<span class="string">&quot;空格个数：&quot;</span>+blank);</span><br><span class="line">		System.out.println(<span class="string">&quot;其他字符个数：&quot;</span>+other);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-24-jmu-Java-02基本语法-08-ArrayList入门-10-分"><a href="#7-24-jmu-Java-02基本语法-08-ArrayList入门-10-分" class="headerlink" title="7-24 jmu-Java-02基本语法-08-ArrayList入门 (10 分)"></a>7-24 jmu-Java-02基本语法-08-ArrayList入门 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		ArrayList &lt;String&gt; vector=<span class="keyword">new</span> ArrayList&lt;String&gt; ();</span><br><span class="line">		String s;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">			s=in.next();</span><br><span class="line">			<span class="keyword">if</span>(s.equals(<span class="string">&quot;!!end!!&quot;</span>))<span class="keyword">break</span>;</span><br><span class="line">			vector.add(s);</span><br><span class="line">		&#125;</span><br><span class="line">		vector.add(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">		vector.add(<span class="number">0</span>,<span class="string">&quot;begin&quot;</span>);</span><br><span class="line">		System.out.println(vector);</span><br><span class="line">		s=in.next();</span><br><span class="line">		<span class="keyword">if</span>(vector.contains(s))System.out.println(<span class="string">&quot;true&quot;</span>+<span class="string">&quot;\n&quot;</span>+vector.indexOf(s));</span><br><span class="line">		<span class="keyword">else</span> System.out.println(<span class="string">&quot;false&quot;</span>+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">		System.out.println(vector.lastIndexOf(s));</span><br><span class="line">        System.out.println(vector.get(<span class="number">0</span>));</span><br><span class="line">		vector.remove(<span class="number">0</span>);</span><br><span class="line">		System.out.println(vector);</span><br><span class="line">		s=in.next();</span><br><span class="line">		vector.set(<span class="number">1</span>, s);</span><br><span class="line">		System.out.println(vector);</span><br><span class="line">		s=in.next();</span><br><span class="line">		ArrayList&lt;String&gt; list=<span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">		<span class="keyword">for</span>(String i: vector) &#123;</span><br><span class="line">			<span class="keyword">if</span>(i.contains(s))list.add(i);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(list);</span><br><span class="line">		<span class="keyword">if</span>(vector.contains(s))vector.remove(vector.indexOf(s));</span><br><span class="line">		System.out.println(vector);</span><br><span class="line">		vector.clear();</span><br><span class="line">		System.out.println(vector+<span class="string">&quot;,&quot;</span>+vector.size()+<span class="string">&quot;,&quot;</span>+vector.isEmpty());</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-25-找到出勤最多的人-10-分"><a href="#7-25-找到出勤最多的人-10-分" class="headerlink" title="7-25 找到出勤最多的人 (10 分)"></a>7-25 找到出勤最多的人 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		Map&lt;String, Integer&gt; ma =<span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line">		String s;</span><br><span class="line">		<span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">		ArrayList&lt;String&gt; ans=<span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">		<span class="keyword">while</span>(in.hasNext()) &#123;</span><br><span class="line">			s=in.next();</span><br><span class="line">			Integer vis=ma.get(s);</span><br><span class="line">			vis=vis==<span class="keyword">null</span>?<span class="number">1</span>:vis+<span class="number">1</span>;</span><br><span class="line">			ma.put(s, vis);</span><br><span class="line">			<span class="keyword">if</span>(vis&gt;max) &#123;</span><br><span class="line">				max=vis;</span><br><span class="line">				ans.clear();</span><br><span class="line">				ans.add(s);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(vis==max) &#123;</span><br><span class="line">				ans.add(s);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> cou=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(String i: ans) &#123;</span><br><span class="line">			cou++;</span><br><span class="line">			System.out.println(i);</span><br><span class="line">			<span class="keyword">if</span>(cou!=ans.size())System.out.println(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-26-创建一个倒数计数线程-10-分"><a href="#7-26-创建一个倒数计数线程-10-分" class="headerlink" title="7-26 创建一个倒数计数线程 (10 分)"></a>7-26 创建一个倒数计数线程 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	Task(<span class="keyword">int</span> n)&#123;</span><br><span class="line">		<span class="keyword">this</span>.n=n;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">			<span class="keyword">int</span> time=<span class="number">500</span>;</span><br><span class="line">			<span class="keyword">while</span>(time--&gt;<span class="number">0</span>);</span><br><span class="line">			System.out.println(i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">		Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Task(n));</span><br><span class="line">        t.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-27-程序改错题4-5-分"><a href="#7-27-程序改错题4-5-分" class="headerlink" title="7-27 程序改错题4 (5 分)"></a>7-27 程序改错题4 (5 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> RunHandler());</span><br><span class="line">        t.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RunHandler</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> x = in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(x--&gt;<span class="number">0</span>)</span><br><span class="line">            System.out.println(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-28-USB接口的定义-10-分"><a href="#7-28-USB接口的定义-10-分" class="headerlink" title="7-28 USB接口的定义 (10 分)"></a>7-28 USB接口的定义 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">USB</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mouse</span> <span class="keyword">implements</span> <span class="title">USB</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		System.out.println(<span class="string">&quot;我不能点了&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		System.out.println(<span class="string">&quot;我点点点&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UPan</span> <span class="keyword">implements</span> <span class="title">USB</span></span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		System.out.println(<span class="string">&quot;我存存存&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		System.out.println(<span class="string">&quot;我走了&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       USB usb1 =<span class="keyword">new</span> Mouse();</span><br><span class="line">       usb1.work();</span><br><span class="line">       usb1.stop();</span><br><span class="line">       USB usb[]=<span class="keyword">new</span> USB[<span class="number">6</span>];</span><br><span class="line">       usb[<span class="number">0</span>]=<span class="keyword">new</span> UPan();</span><br><span class="line">       usb[<span class="number">1</span>]=<span class="keyword">new</span> Mouse();</span><br><span class="line">       <span class="keyword">for</span>(USB i: usb) &#123;</span><br><span class="line">    	   i.work();</span><br><span class="line">    	   i.stop();</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-29-Circle类-10-分"><a href="#7-29-Circle类-10-分" class="headerlink" title="7-29 Circle类 (10 分)"></a>7-29 Circle类 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> r;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.r=<span class="number">2</span>;</span><br><span class="line">		System.out.println(<span class="string">&quot;this is a constructor&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">(<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(r&lt;=<span class="number">0</span>)<span class="keyword">this</span>.r=<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">this</span>.r=r;</span><br><span class="line">		System.out.println(<span class="string">&quot;this is a constructor with para&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> r;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(r&lt;=<span class="number">0</span>) <span class="keyword">this</span>.r=<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">this</span>.r = r;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="keyword">int</span>)(Math.PI*r*r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;Circle [radius=&quot;</span> + r + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		Circle c1 =<span class="keyword">new</span> Circle();</span><br><span class="line">		System.out.println(c1);</span><br><span class="line">		System.out.println(<span class="string">&quot;c1:area=&quot;</span>+c1.getArea());</span><br><span class="line">		Circle c2 = <span class="keyword">new</span> Circle();</span><br><span class="line">		System.out.println(c2);</span><br><span class="line">		<span class="keyword">int</span> r=in.nextInt();</span><br><span class="line">		c2.set(r);</span><br><span class="line">		System.out.println(c2);</span><br><span class="line">		System.out.println(<span class="string">&quot;c2:area=&quot;</span>+c2.getArea());</span><br><span class="line">		Circle c3 =<span class="keyword">new</span> Circle(in.nextInt());</span><br><span class="line">		System.out.println(c3);</span><br><span class="line">		System.out.println(<span class="string">&quot;c3:area=&quot;</span>+c3.getArea());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-30-数组与对象-10-分"><a href="#7-30-数组与对象-10-分" class="headerlink" title="7-30 数组与对象 (10 分)"></a>7-30 数组与对象 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.omg.PortableInterceptor.NON_EXISTENT;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	String name;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name=<span class="string">&quot;none&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name=name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> <span class="string">&quot;name:&quot;</span>+name; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    	Scanner in =<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    	Person a[]=<span class="keyword">new</span> Person[<span class="number">2</span>];</span><br><span class="line">    	a[<span class="number">0</span>]=<span class="keyword">new</span> Person();</span><br><span class="line">    	a[<span class="number">1</span>]=<span class="keyword">new</span> Person(in.next());</span><br><span class="line">    	<span class="keyword">for</span>(Person i: a) &#123;</span><br><span class="line">    		System.out.println(i);</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-31-圆柱体类设计-10-分"><a href="#7-31-圆柱体类设计-10-分" class="headerlink" title="7-31 圆柱体类设计 (10 分)"></a>7-31 圆柱体类设计 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.omg.PortableInterceptor.NON_EXISTENT;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yz</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> r,h;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Yz</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;Constructor no para&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Yz</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.r=r;</span><br><span class="line">		<span class="keyword">this</span>.h=h;</span><br><span class="line">		System.out.println(<span class="string">&quot;Constructor with para&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getV</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="keyword">int</span>)(Math.PI*r*r*h);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getR</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> r;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setR</span><span class="params">(<span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.r = r;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getH</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> h;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setH</span><span class="params">(<span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.h = h;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    	Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    	<span class="keyword">int</span> r=in.nextInt();</span><br><span class="line">    	<span class="keyword">int</span> h=in.nextInt();</span><br><span class="line">    	Yz c1=<span class="keyword">new</span> Yz(r,h);</span><br><span class="line">    	System.out.println(c1.getV());</span><br><span class="line">    	Yz c2=<span class="keyword">new</span> Yz();</span><br><span class="line">    	System.out.println(c2.getV());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-32-List的使用-15-分"><a href="#7-32-List的使用-15-分" class="headerlink" title="7-32 List的使用 (15 分)"></a>7-32 List的使用 (15 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.omg.PortableInterceptor.NON_EXISTENT;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	String name;</span><br><span class="line">	<span class="keyword">int</span> age;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name,<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name=name;</span><br><span class="line">		<span class="keyword">this</span>.age=age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;Person [name=&quot;</span> + name + <span class="string">&quot;, age=&quot;</span> + age + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    	Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    	List &lt;Person&gt; list =<span class="keyword">new</span> ArrayList&lt;Person&gt;();</span><br><span class="line">    	<span class="keyword">int</span> n=in.nextInt();</span><br><span class="line">    	<span class="keyword">while</span>(n--&gt;<span class="number">0</span>) &#123;</span><br><span class="line">    		list.add(<span class="keyword">new</span> Person(in.next(),in.nextInt()));</span><br><span class="line">    	&#125;</span><br><span class="line">    	<span class="keyword">for</span>(Person i: list) &#123;</span><br><span class="line">    		System.out.println(i);</span><br><span class="line">    	&#125;</span><br><span class="line">    	String name=in.next();</span><br><span class="line">    	<span class="keyword">boolean</span> flag=<span class="keyword">true</span>;</span><br><span class="line">    	<span class="keyword">for</span>(Person i: list) &#123;</span><br><span class="line">    		<span class="keyword">if</span>(i.name.equals(name)) &#123;</span><br><span class="line">    			System.out.println(i);</span><br><span class="line">    			flag=<span class="keyword">false</span>;</span><br><span class="line">    			<span class="keyword">break</span>;</span><br><span class="line">    		&#125;</span><br><span class="line">    	&#125;</span><br><span class="line">    	<span class="keyword">if</span>(flag) System.out.println(<span class="string">&quot;此人不存在&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="7-33-jmu-Java-03面向对象基础-03-形状-10-分"><a href="#7-33-jmu-Java-03面向对象基础-03-形状-10-分" class="headerlink" title="7-33 jmu-Java-03面向对象基础-03-形状 (10 分)"></a>7-33 jmu-Java-03面向对象基础-03-形状 (10 分)</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Rectangle[] rectangle = <span class="keyword">new</span> Rectangle[<span class="number">2</span>];</span><br><span class="line">		Circle[] circle = <span class="keyword">new</span> Circle[<span class="number">2</span>];</span><br><span class="line">		Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rectangle.length;i++) &#123;</span><br><span class="line">			rectangle[i] = <span class="keyword">new</span> Rectangle(sc.nextInt(),sc.nextInt());</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;circle.length;i++) &#123;</span><br><span class="line">			circle[i] = <span class="keyword">new</span> Circle(sc.nextInt());</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(rectangle[<span class="number">0</span>].getPerimeter()+rectangle[<span class="number">1</span>].getPerimeter()+</span><br><span class="line">				circle[<span class="number">0</span>].getPerimeter()+circle[<span class="number">1</span>].getPerimeter());</span><br><span class="line">		System.out.println(rectangle[<span class="number">0</span>].getArea()+rectangle[<span class="number">1</span>].getArea()+</span><br><span class="line">				circle[<span class="number">0</span>].getArea()+circle[<span class="number">1</span>].getArea());</span><br><span class="line">		System.out.println(Arrays.deepToString(rectangle));</span><br><span class="line">		System.out.println(Arrays.deepToString(circle));</span><br><span class="line">		sc.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> width;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> length;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span><span class="params">(<span class="keyword">int</span> width,<span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.width = width;</span><br><span class="line">		<span class="keyword">this</span>.length = length;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"><span class="comment">//求周长方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPerimeter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">2</span>*(width+length);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//求面积方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> width*length;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;Rectangle [width=&quot;</span> + width + <span class="string">&quot;, length=&quot;</span> + length + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> radius;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">(<span class="keyword">int</span> radius)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.radius = radius;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"><span class="comment">//求周长方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPerimeter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="keyword">int</span>)(<span class="number">2</span>*Math.PI*radius);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//求面积方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="keyword">int</span>)(Math.PI*radius*radius);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;Circle [radius=&quot;</span> + radius + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
